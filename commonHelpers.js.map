{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('button[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\n\nconst days = document.querySelector('span[data-days]');\nconst hours = document.querySelector('span[data-hours]');\nconst minutes = document.querySelector('span[data-minutes]');\nconst seconds = document.querySelector('span[data-seconds]');\n\nconst onStartBtnClick = timerInit;\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      iziToast.show(error);\n      startBtn.setAttribute('disabled', '');\n    } else {\n      startBtn.removeAttribute('disabled');\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\nstartBtn.addEventListener('click', onStartBtnClick);\n\nfunction timerInit() {\n  startBtn.setAttribute('disabled', '');\n  dateTimePicker.setAttribute('disabled', '');\n\n  const intervalId = setInterval(() => {\n    const deltaTime = userSelectedDate - Date.now();\n\n    if (deltaTime <= 0) {\n      clearInterval(intervalId);\n      dateTimePicker.removeAttribute('disabled');\n      return;\n    }\n\n    const dateConvert = convertMs(deltaTime);\n\n    days.textContent = addLeadingZero(dateConvert.days);\n    hours.textContent = addLeadingZero(dateConvert.hours);\n    minutes.textContent = addLeadingZero(dateConvert.minutes);\n    seconds.textContent = addLeadingZero(dateConvert.seconds);\n  }, 1000);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst error = {\n  title: 'Error',\n  message: 'Please choose a date in the future',\n  backgroundColor: '#EF4040',\n  position: 'topRight',\n  theme: 'dark',\n};\n"],"names":["startBtn","dateTimePicker","days","hours","minutes","seconds","onStartBtnClick","timerInit","userSelectedDate","options","selectedDates","iziToast","error","flatpickr","intervalId","deltaTime","dateConvert","convertMs","addLeadingZero","value","ms"],"mappings":"2GAKA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAiB,SAAS,cAAc,kBAAkB,EAE1DC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAErDC,EAAkBC,EAExB,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,GAAK,IAAI,MAC1BC,EAAS,KAAKC,CAAK,EACnBZ,EAAS,aAAa,WAAY,EAAE,IAEpCA,EAAS,gBAAgB,UAAU,EACnCQ,EAAmBE,EAAc,CAAC,EAErC,CACH,EAEAG,EAAU,mBAAoBJ,CAAO,EACrCT,EAAS,iBAAiB,QAASM,CAAe,EAElD,SAASC,GAAY,CACnBP,EAAS,aAAa,WAAY,EAAE,EACpCC,EAAe,aAAa,WAAY,EAAE,EAE1C,MAAMa,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAYP,EAAmB,KAAK,IAAG,EAE7C,GAAIO,GAAa,EAAG,CAClB,cAAcD,CAAU,EACxBb,EAAe,gBAAgB,UAAU,EACzC,MACD,CAED,MAAMe,EAAcC,EAAUF,CAAS,EAEvCb,EAAK,YAAcgB,EAAeF,EAAY,IAAI,EAClDb,EAAM,YAAce,EAAeF,EAAY,KAAK,EACpDZ,EAAQ,YAAcc,EAAeF,EAAY,OAAO,EACxDX,EAAQ,YAAca,EAAeF,EAAY,OAAO,CACzD,EAAE,GAAI,CACT,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAQrB,MAAMlB,EAAO,KAAK,MAAMkB,EAAK,KAAG,EAE1BjB,EAAQ,KAAK,MAAOiB,EAAK,MAAO,IAAI,EAEpChB,EAAU,KAAK,MAAQgB,EAAK,MAAO,KAAQ,GAAM,EAEjDf,EAAU,KAAK,MAASe,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAlB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMO,EAAQ,CACZ,MAAO,QACP,QAAS,qCACT,gBAAiB,UACjB,SAAU,WACV,MAAO,MACT"}